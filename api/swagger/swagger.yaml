swagger: "2.0"
info:
  version: "0.0.1"
  title: My User Manager
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
  - void
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /users:
    x-swagger-router-controller: users
    get:
      description: Get all users
      operationId: getusers
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
    post:
      operationId: createUsers
      parameters:
        - in: body
          name: user
          schema:
            $ref: '#/definitions/user'
          required: true
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/user'
        '405':
          description: Invalid input
  '/users/{userId}':
    x-swagger-router-controller: users
    get:
      description: Get one user
      operationId: getusersById
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Invalid user id
        '404':
          description: User not found
    put:
      operationId: updateUsersById
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
        - in: body
          name: user
          schema:
            $ref: '#/definitions/user'
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Invalid user id
        '404':
          description: User not found
    delete:
      operationId: deleteUsersById
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: Invalid user id
        '404':
          description: User not found
# complex objects have schema definitions
definitions:
  user:
    properties:
      id:
        type: integer
      name:
        type: string
      email:
        type: string
